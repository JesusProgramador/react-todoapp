{"version":3,"sources":["components/todoReducer.js","components/TodoListItem.js","components/TodoList.js","components/TodoAdd.js","hooks/useForm.js","components/TodoApp.js","index.js"],"names":["todoReducer","state","action","type","payload","filter","todo","id","map","done","TodoListItem","index","handleDelete","handleToggle","className","onClick","desc","TodoList","todos","TodoAdd","handleAddTodo","initialState","useState","values","setValues","target","name","value","useForm","description","handleInputChange","reset","onSubmit","e","preventDefault","trim","length","newTodo","Date","getTime","placeholder","autoComplete","onChange","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","todoId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c11f7e1a.chunk.js","sourcesContent":["\r\nexport const todoReducer = ( state = [], action ) => {\r\n\r\n  switch ( action.type ) {\r\n    case 'add':\r\n      return [ ...state, action.payload ];\r\n\r\n    case 'delete':\r\n      return state.filter( todo => todo.id !== action.payload );\r\n\r\n    case 'toggle':\r\n      return state.map( todo => \r\n        ( todo.id === action.payload  )\r\n          ? { ...todo, done: !todo.done }\r\n          : todo\r\n      )\r\n\r\n    case 'toggle-old':\r\n      return state.map( todo => {\r\n        if ( todo.id === action.payload ){\r\n          return {\r\n            ...todo,\r\n            done: !todo.done\r\n          }\r\n        } else {\r\n          return todo;\r\n        }\r\n      })\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import React from 'react'\r\n\r\nexport const TodoListItem = ({ todo, index, handleDelete, handleToggle }) => {\r\n  return (\r\n      <li key={todo.id} className=\"list-group-item\">\r\n        <p\r\n          className={`${todo.done && \"complete\"}`}\r\n          onClick={() => handleToggle(todo.id)}\r\n        >\r\n          {index + 1} {todo.desc}\r\n        </p>\r\n        <button\r\n          className=\"btn btn-danger\"\r\n          onClick={() => handleDelete(todo.id)}\r\n        >\r\n          Borrar\r\n        </button>\r\n      </li>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { TodoListItem } from './TodoListItem';\r\n\r\nexport const TodoList = ({ todos, handleDelete, handleToggle }) => {\r\n  return (\r\n      <ul className=\"list-group list-group-flush\">\r\n        {todos.map((todo, index) => (\r\n          <TodoListItem\r\n            key={ todo.id }\r\n            todo={ todo }\r\n            index={ index }\r\n            handleDelete={ handleDelete }\r\n            handleToggle={ handleToggle }\r\n          />\r\n        ))}\r\n      </ul>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useForm } from \"../hooks/useForm\"; // custom hook\r\n\r\nexport const TodoAdd = ({ handleAddTodo}) => {\r\n  const [{ description }, handleInputChange, reset] = useForm({\r\n    description: \"\",\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (description.trim().length <= 1) {\r\n      return;\r\n    }\r\n\r\n    const newTodo = {\r\n      id: new Date().getTime(),\r\n      desc: description,\r\n      done: false,\r\n    };\r\n\r\n    handleAddTodo( newTodo );\r\n    reset();\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h4>Agrega TODO</h4>\r\n      <hr />\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"description\"\r\n          className=\"form-control\"\r\n          placeholder=\"Aprender...\"\r\n          autoComplete=\"off\"\r\n          value={description}\r\n          onChange={handleInputChange}\r\n        />\r\n\r\n        <button type=\"submit\" className=\"btn btn-outline-primary mt-2 w-100\">\r\n          Agregar\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState)\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n}","import React, { useReducer, useEffect } from \"react\";\r\nimport { todoReducer } from \"./todoReducer\"; //Logica del reducer\r\nimport { TodoList } from \"./TodoList\";\r\nimport { TodoAdd } from \"./TodoAdd\";\r\n\r\nimport \"../style.css\";\r\n\r\nconst init = () => {\r\n\r\n  return JSON.parse(localStorage.getItem(\"todos\")) || [];\r\n\r\n};\r\n\r\nexport const TodoApp = () => {\r\n\r\n  const [todos, dispatch] = useReducer(todoReducer, [], init);\r\n\r\n  useEffect( () => {\r\n    localStorage.setItem('todos', JSON.stringify( todos ))\r\n  }, [todos]);\r\n\r\n  const handleDelete = ( todoId ) => {\r\n\r\n    const action = {\r\n      type: 'delete',\r\n      payload: todoId\r\n    };\r\n\r\n    dispatch( action );\r\n  }\r\n\r\n  const handleToggle = ( todoId ) => {\r\n\r\n    dispatch({\r\n      type: 'toggle',\r\n      payload: todoId\r\n    })\r\n  }\r\n\r\n  const handleAddTodo = ( newTodo ) => {\r\n\r\n    dispatch({\r\n      type: \"add\",\r\n      payload: newTodo,\r\n    });\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Todo List ( {todos.length} )</h1>\r\n      <hr />\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-7\">\r\n          <TodoList\r\n            todos={todos}\r\n            handleDelete={handleDelete}\r\n            handleToggle={handleToggle}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-5\">\r\n          <TodoAdd handleAddTodo={ handleAddTodo } />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { TodoApp } from './components/TodoApp';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <TodoApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}